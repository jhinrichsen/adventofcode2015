pub fn part1_input() -> usize {
	part1(&input())
}

pub fn part2_input() -> usize {
	part2(&input())
}

fn input() -> String {
	std::fs::read_to_string("testdata/day5.txt").expect("cannot read day 5")
}

fn part1(s: &str) -> usize {
	0
}

fn part2(s: &str) -> usize {
	0
}

#[cfg(test)]
mod tests {
	#[test]
	fn part1_examples() {}

	#[test]
	fn part1_input() {
		assert_eq!(0, super::part1_input())
	}

	#[test]
	fn part2_input() {
		assert_eq!(0, super::part2_input())
	}
}

#[cfg(test)]
mod benches {
	use test::Bencher;

	#[bench]
	fn part1_input(b: &mut Bencher) {
		b.iter(super::part1_input);
	}

	#[bench]
	fn part2_input(b: &mut Bencher) {
		b.iter(super::part2_input);
	}
}
